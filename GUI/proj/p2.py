#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#    Dec 08, 2018 06:57:54 PM PKT  platform: Windows NT

import sys
import runpy
try:
    import Tkinter as tk
    from PIL import Image, ImageTk
except ImportError:
    import tkinter as tk
    from PIL import Image, ImageTk
try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import p2_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    p2_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    p2_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None
def kill1():
    root.destroy()
    from updating import vp_start_gui
    vp_start_gui()


def kill2(event):
    root.destroy()
    from searching import vp_start_gui
    vp_start_gui()
class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#ececec' # Closest X11 color: 'gray92' 
        font10 = "-family {Franklin Gothic Demi Cond} -size 15 -weight"  \
            " normal -slant roman -underline 0 -overstrike 0"
        font11 = "-family {Franklin Gothic Demi} -size 21 -weight "  \
            "normal -slant roman -underline 0 -overstrike 0"
        font13 = "-family {Shonar Bangla} -size 14 -weight normal "  \
            "-slant roman -underline 0 -overstrike 0"
        font16 = "-family {Segoe UI} -size 12 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font15 = "-family {Segoe UI} -size 18 -weight normal -slant " \
                 "roman -underline 0 -overstrike 0"
        font17 = "-family {Segoe UI} -size 11 -weight normal -slant "  \
            "roman -underline 1 -overstrike 0"
        font19 = "-family {Segoe UI} -size 15 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font9 = "-family {Franklin Gothic Demi} -size 11 -weight "  \
            "normal -slant roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("603x450+455+149")
        top.title("Home")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.TLabel1 = ttk.Label(top)
        self.TLabel1.place(relx=0.265, rely=0.022, height=40, width=274)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#284f9b")
        self.TLabel1.configure(font=font11)
        self.TLabel1.configure(relief='flat')
        self.TLabel1.configure(text='''COMMUNIST BADGER''')

        self.TButton1 = ttk.Button(top, command= kill1)
        self.TButton1.place(relx=0.017, rely=0.133, height=25, width=136)
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''Update Stocks''')

        self.TButton2 = ttk.Button(top)
        self.TButton2.place(relx=0.265, rely=0.133, height=25, width=126)
        self.TButton2.configure(takefocus="")
        self.TButton2.configure(text='''Stock list''')

        self.TEntry1 = ttk.Entry(top)
        self.TEntry1.place(relx=0.697, rely=0.133, relheight=0.047
                , relwidth=0.259)
        self.TEntry1.configure(takefocus="")
        self.TEntry1.configure(cursor="ibeam")
        self.TEntry1.bind("<Button-1>", kill2)

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(relx=0.498, rely=0.2, relheight=0.311)
        self.TSeparator1.configure(orient="vertical")

        self.TFrame1 = ttk.Frame(top)
        self.TFrame1.place(relx=0.017, rely=0.2, relheight=0.322, relwidth=0.456)

        self.TFrame1.configure(relief='groove')
        self.TFrame1.configure(borderwidth="2")
        self.TFrame1.configure(relief='groove')
        self.TFrame1.configure(width=275)

        self.TLabel3 = ttk.Label(self.TFrame1)
        self.TLabel3.place(relx=0.036, rely=0.069, height=19, width=96)
        self.TLabel3.configure(background="#d9d9d9")
        self.TLabel3.configure(foreground="#284f9b")
        self.TLabel3.configure(font=font9)
        self.TLabel3.configure(relief='flat')
        self.TLabel3.configure(text='''Market Trend''')

        self.original = Image.open('sample.png')
        self.image = ImageTk.PhotoImage(self.original)
        self.Canvas1 = tk.Canvas(self.TFrame1)
        self.Canvas1.place(relx=0.036, rely=0.276, relheight=0.641, relwidth=0.92)
        self.Canvas1.configure(background="#d9d9d9")
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(highlightbackground="#d9d9d9")
        self.Canvas1.configure(highlightcolor="black")
        self.Canvas1.configure(insertbackground="black")
        self.Canvas1.configure(relief='ridge')
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")
        self.Canvas1.configure(width=253)
        self.Canvas1.create_image(0, 0, image=self.image, anchor='nw', tags="IMG")
        self.Canvas1.bind("<Configure>", self.resize)

        self.TFrame3 = ttk.Frame(top)
        self.TFrame3.place(relx=0.531, rely=0.2, relheight=0.322, relwidth=0.456)

        self.TFrame3.configure(relief='groove')
        self.TFrame3.configure(borderwidth="2")
        self.TFrame3.configure(relief='groove')
        self.TFrame3.configure(width=275)

        self.TLabel4 = ttk.Label(self.TFrame3)
        self.TLabel4.place(relx=0.036, rely=0.069, height=19, width=108)
        self.TLabel4.configure(background="#d9d9d9")
        self.TLabel4.configure(foreground="#284f9b")
        self.TLabel4.configure(font=font9)
        self.TLabel4.configure(relief='flat')
        self.TLabel4.configure(text='''Market Index''')

        self.Label1 = tk.Label(self.TFrame3)
        self.Label1.place(relx=0.291, rely=0.345, height=61, width=104)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font15)
        self.Label1.configure(foreground="#000000")

        self.Label1.configure(text='''###''')
        self.Label1.configure(width=104)

        self.TLabel2 = ttk.Label(top)
        self.TLabel2.place(relx=0.63, rely=0.133, height=19, width=42)
        self.TLabel2.configure(background="#d9d9d9")
        self.TLabel2.configure(foreground="#000000")
        self.TLabel2.configure(font="TkDefaultFont")
        self.TLabel2.configure(relief='flat')
        self.TLabel2.configure(text='''Search:''')

        self.TSeparator2 = ttk.Separator(top)
        self.TSeparator2.place(relx=0.017, rely=0.533, relwidth=0.962)

        self.Frame4 = tk.Frame(top)
        self.Frame4.place(relx=0.017, rely=0.556, relwidth=0.97)
        self.Frame4.configure(relief='groove')
        self.Frame4.configure(borderwidth="2")
        self.Frame4.configure(relief='groove')
        self.Frame4.configure(background="#d9d9d9")
        self.Frame4.configure(width=585)

        self.Canvas2 = tk.Canvas(self.Frame4)
        vbar = tk.Scrollbar(self.Frame4, orient='vertical', command=self.Canvas2.yview)
        self.Canvas2.configure(scrollregion=(0,0,5000,5000))
        vbar.pack(side='right', fill='y')
        self.Canvas2.configure(background="#d9d9d9")
        self.Canvas2.configure(borderwidth="2")
        self.Canvas2.configure(highlightbackground="#d9d9d9")
        self.Canvas2.configure(highlightcolor="black")
        self.Canvas2.configure(insertbackground="black")
        self.Canvas2.configure(relief='ridge')
        self.Canvas2.configure(selectbackground="#c4c4c4")
        self.Canvas2.configure(selectforeground="black")
        self.Canvas2.configure(yscrollcommand=vbar.set)
        self.Canvas2.pack(side='left', expand=True, fill='both')

        self.TLabel5 = ttk.Label(self.Canvas2)
        self.TLabel5.pack(fill='x', padx=5, pady=5)
        self.TLabel5.configure(background="#d9d9d9")
        self.TLabel5.configure(foreground="#284f9b")
        self.TLabel5.configure(font=font10)
        self.TLabel5.configure(relief='flat')
        self.TLabel5.configure(text='''HOT STOCKS''')

        for num in range(10):
            b = tk.Frame(self.Canvas2)
            b.pack(fill='x', padx=7, pady=1)
            b.configure(height=45)
            b.configure(relief='groove')
            b.configure(borderwidth="1")
            b.configure(relief='groove')
            b.configure(background="#d9d9d9")
            b.configure(highlightcolor="#d9d9d9")

            l1 = tk.Label(b)
            l1.place(relx=0.071, rely=0.222, height=27, width=57)
            l1.configure(background="#d9d9d9")
            l1.configure(disabledforeground="#a3a3a3")
            l1.configure(font=font13)
            l1.configure(foreground="#000000")
            comName = "Google"
            assert isinstance(comName, str)
            l1.configure(text=comName)
            l1.configure(width=57)

            l2 = tk.Label(b)
            l2.place(relx=0.496, rely=0.222, height=17, width=15)
            l2.configure(background="#d9d9d9")
            l2.configure(disabledforeground="#a3a3a3")
            l2.configure(font=font16)
            l2.configure(foreground="#000000")
            l2.configure(text='''$''')
            l2.configure(width=15)

            l3 = tk.Label(b)
            l3.place(relx=0.549, rely=0.222, height=21, width=34)
            l3.configure(background="#d9d9d9")
            l3.configure(disabledforeground="#a3a3a3")
            l3.configure(font=font17)
            l3.configure(foreground="#000000")
            price = "###"
            assert isinstance(price, str)
            l3.configure(text=price)
            l3.configure(width=34)

            l4 = tk.Label(b)
            l4.place(relx=0.018, rely=0.222, height=21, width=12)
            l4.configure(background="#d9d9d9")
            l4.configure(disabledforeground="#a3a3a3")
            l4.configure(font=font19)
            l4.configure(foreground="#000000")
            l4.configure(text='''-''')
            l4.configure(width=12)


    def resize(self, event):
        size = (event.width, event.height)
        resized = self.original.resize(size, Image.ANTIALIAS)
        self.image = ImageTk.PhotoImage(resized)
        self.Canvas1.delete("IMG")
        self.Canvas1.create_image(0, 0, image=self.image, anchor='nw', tags="IMG")


if __name__ == '__main__':
    vp_start_gui()





