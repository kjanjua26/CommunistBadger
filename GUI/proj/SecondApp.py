#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.11f
# In conjunction with Tcl version 8.6
#    Mar 02, 2018 08:33:50 AM
import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import SecondApp_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    SecondApp_support.set_Tk_var()
    top = Widget_Demo_1 (root)
    SecondApp_support.init(root, top)
    root.mainloop()

w = None
def create_Widget_Demo_1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    SecondApp_support.set_Tk_var()
    top = Widget_Demo_1 (w)
    SecondApp_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Widget_Demo_1():
    global w
    w.destroy()
    w = None


class Widget_Demo_1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font10 = "-family {DejaVu Sans Mono} -size -12 -weight normal "  \
            "-slant roman -underline 0 -overstrike 0"

        top.geometry("517x386+344+162")
        top.title("Widget Demo 1")
        top.configure(highlightcolor="black")



        self.frameTop = Frame(top)
        self.frameTop.place(relx=0.0, rely=0.0, relheight=0.2, relwidth=1.0)
        self.frameTop.configure(relief=GROOVE)
        self.frameTop.configure(borderwidth="2")
        self.frameTop.configure(relief=GROOVE)
        self.frameTop.configure(width=125)

        self.Label1 = Label(self.frameTop)
        self.Label1.place(relx=0.06, rely=0.26, height=41, width=146)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(text='''Entry or SINGLE LINE Text Widget:''')
        self.Label1.configure(width=116)
        self.Label1.configure(wraplength="110")

        self.entryExample = Entry(self.frameTop)
        self.entryExample.place(relx=0.32, rely=0.39,height=20, relwidth=0.32)
        self.entryExample.configure(background="white")
        self.entryExample.configure(font=font10)
        self.entryExample.configure(selectbackground="#c4c4c4")

        self.btnGetText = Button(self.frameTop)
        self.btnGetText.place(relx=0.7, rely=0.26, height=29, width=103)
        self.btnGetText.configure(activebackground="#d9d9d9")
        self.btnGetText.configure(pady="0")
        self.btnGetText.configure(text='''Get The Text''')
        self.btnGetText.configure(width=103)
        self.btnGetText.bind('<Button-1>',lambda e:SecondApp_support.btnGetText_lclick(e))

        self.lframeRadioButtons = LabelFrame(top)
        self.lframeRadioButtons.place(relx=0.0, rely=0.2, relheight=0.61
                , relwidth=0.43)
        self.lframeRadioButtons.configure(relief=GROOVE)
        self.lframeRadioButtons.configure(text='''Radio Buttons''')
        self.lframeRadioButtons.configure(width=150)

        self.rbRed = Radiobutton(self.lframeRadioButtons)
        self.rbRed.place(relx=0.23, rely=0.21, relheight=0.09, relwidth=0.24)
        self.rbRed.configure(activebackground="#d9d9d9")
        self.rbRed.configure(justify=LEFT)
        self.rbRed.configure(text='''Red''')
        self.rbRed.configure(value="Red")
        self.rbRed.configure(variable=SecondApp_support.Colors)

        self.rbBlue = Radiobutton(self.lframeRadioButtons)
        self.rbBlue.place(relx=0.23, rely=0.34, relheight=0.09, relwidth=0.25)
        self.rbBlue.configure(activebackground="#d9d9d9")
        self.rbBlue.configure(justify=LEFT)
        self.rbBlue.configure(text='''Blue''')
        self.rbBlue.configure(value="Blue")
        self.rbBlue.configure(variable=SecondApp_support.Colors)

        self.rbGreen = Radiobutton(self.lframeRadioButtons)
        self.rbGreen.place(relx=0.23, rely=0.47, relheight=0.09, relwidth=0.3)
        self.rbGreen.configure(activebackground="#d9d9d9")
        self.rbGreen.configure(justify=LEFT)
        self.rbGreen.configure(text='''Green''')
        self.rbGreen.configure(value="Green")
        self.rbGreen.configure(variable=SecondApp_support.Colors)

        self.lblRbInfo = Label(self.lframeRadioButtons)
        self.lblRbInfo.place(relx=0.23, rely=0.64, height=21, width=114)
        self.lblRbInfo.configure(activebackground="#f9f9f9")
        self.lblRbInfo.configure(relief=SUNKEN)
        self.lblRbInfo.configure(textvariable=SecondApp_support.Colors)

        self.lframeCheckBoxes = LabelFrame(top)
        self.lframeCheckBoxes.place(relx=0.55, rely=0.2, relheight=0.61
                , relwidth=0.44)
        self.lframeCheckBoxes.configure(relief=GROOVE)
        self.lframeCheckBoxes.configure(text='''Check Boxes''')
        self.lframeCheckBoxes.configure(width=150)

        self.chkApples = Checkbutton(self.lframeCheckBoxes)
        self.chkApples.place(relx=0.17, rely=0.17, relheight=0.09, relwidth=0.29)

        self.chkApples.configure(activebackground="#d9d9d9")
        self.chkApples.configure(justify=LEFT)
        self.chkApples.configure(text='''Apples''')
        self.chkApples.configure(variable=SecondApp_support.che39)

        self.chkBananas = Checkbutton(self.lframeCheckBoxes)
        self.chkBananas.place(relx=0.17, rely=0.31, relheight=0.09
                , relwidth=0.33)
        self.chkBananas.configure(activebackground="#d9d9d9")
        self.chkBananas.configure(justify=LEFT)
        self.chkBananas.configure(text='''Bananas''')
        self.chkBananas.configure(variable=SecondApp_support.che40)

        self.chkGrapes = Checkbutton(self.lframeCheckBoxes)
        self.chkGrapes.place(relx=0.17, rely=0.45, relheight=0.09, relwidth=0.3)
        self.chkGrapes.configure(activebackground="#d9d9d9")
        self.chkGrapes.configure(justify=LEFT)
        self.chkGrapes.configure(text='''Grapes''')
        self.chkGrapes.configure(variable=SecondApp_support.che41)

        self.btnPrintChecks = Button(self.lframeCheckBoxes)
        self.btnPrintChecks.place(relx=0.26, rely=0.72, height=24, width=117)
        self.btnPrintChecks.configure(activebackground="#d9d9d9")
        self.btnPrintChecks.configure(pady="0")
        self.btnPrintChecks.configure(text='''Print Checks''')
        self.btnPrintChecks.bind('<Button-1>',lambda e:SecondApp_support.btnGetChecks_lclick(e))

        self.frameBottom = Frame(top)
        self.frameBottom.place(relx=0.0, rely=0.81, relheight=0.19, relwidth=1.0)

        self.frameBottom.configure(relief=GROOVE)
        self.frameBottom.configure(borderwidth="2")
        self.frameBottom.configure(relief=GROOVE)
        self.frameBottom.configure(width=125)

        self.btnExit = Button(self.frameBottom)
        self.btnExit.place(relx=0.38, rely=0.36, height=24, width=99)
        self.btnExit.configure(activebackground="#d9d9d9")
        self.btnExit.configure(pady="0")
        self.btnExit.configure(text='''Exit''')
        self.btnExit.bind('<Button-1>',lambda e:SecondApp_support.btnExit_lclick(e))






if __name__ == '__main__':
    vp_start_gui()



